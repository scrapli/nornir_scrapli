[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nornir_scrapli"
dynamic = [
    "version",
    "dependencies",
    "optional-dependencies",
]
description = "Scrapli's plugin for Nornir"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
authors = [
    { name = "Carl Montanari", email = "carl.r.montanari@gmail.com" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "arista",
    "automation",
    "cisco",
    "eos",
    "iosxe",
    "iosxr",
    "juniper",
    "junos",
    "netconf",
    "network",
    "nxos",
    "ssh",
    "telnet",
]

[project.urls]
Homepage = "https://github.com/scrapli/nornir_scrapli"
Docs = "https://scrapli.github.io/nornir_scrapli/"

[project.entry-points."nornir.plugins.connections"]
scrapli = "nornir_scrapli.connection:ScrapliCore"
scrapli_cfg= "nornir_scrapli.connection:ScrapliConfig"
scrapli_netconf= "nornir_scrapli.connection:ScrapliNetconf"

[tool.setuptools.dynamic]
version = { attr = "nornir_scrapli.__version__" }
dependencies = { file = "requirements.txt" }
optional-dependencies.dev = { file = [
    "requirements-dev.txt",
    "requirements-genie.txt",
] }
optional-dependencies.docs = { file = "requirements-docs.txt" }
optional-dependencies.genie = { file = "requirements-genie.txt" }

[tool.setuptools.package-data]
nornir_scrapli = [
    "py.typed"
]

[tool.coverage.run]
source = [
    "nornir_scrapli/"
]

[tool.coverage.report]
sort = "cover"

[tool.black]
line-length = 100
target-version = [
    "py311",
    "py313",
]

[tool.pylama]
linters = "mccabe,pycodestyle,pylint"
skip = ".nox/*,build/*,tests/*,venv/*"

[tool.pylama.pycodestyle]
max_line_length = 100

[tool.pylama.pylint]
rcfile = ".pylintrc"

[tool.pydocstyle]
match-dir = "^nornir_scrapli/*"
ignore = "D101,D202,D203,D212,D400,D406,D407,D408,D409,D415"
# D101: missing docstring in public class
# D202: No blank lines allowed after function docstring
# D203: 1 blank line required before class docstring
# D212: Multi-line docstring summary should start at the first line
# D400: First line should end with a period
# D406: Section name should end with a newline
# D407: Missing dashed underline after section
# D408: Section underline should be in the line following the sections name
# D409: Section underline should match the length of its name
# D415: first line should end with a period, question mark, or exclamation point

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
known_first_party = "nornir"
known_third_party = "nornir_utils,pytest,scrapli,scrapli_netconf"

[tool.mypy]
python_version = "3.10"
pretty = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_configs = true
strict_optional = true

